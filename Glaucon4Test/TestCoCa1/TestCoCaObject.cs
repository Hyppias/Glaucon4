

using Terwiel.Glaucon;
using static Terwiel.Glaucon.Glaucon;
using static Terwiel.Glaucon.Glaucon.LoadCase;

namespace UnitTestGlaucon
{
    public partial class UnitTestCoCa1
    {
        public Parameters Param = new Parameters()
        {
            ModalExaggeration = 1.0,//exaggerate modal mesh deformations  
            LumpedMassMatrix = false, // 0: consistent mass ... 1: lumped mass matrix   
            DynamicModesCount = 3,//number of desired dynamic modes of vibration
            XIncrement = 10,
            AccountForShear = false,
            AccountForGeomStability = false,
            CondensationMethod = 2,
            DeformationExaggeration = 1e-4,
            ModalMethod = 1,//1: subspace Jacobi     2: Stodola 
            Scale = 1.0,            
            PanRate = 1.0, // pan during animation 
            Shift = 0.0,//modal frequency shift factor
            ModalConvergenceTol = 1e-6,//mode shape tolerance

            StrainLimit = 12.0,
            EquilibriumTolerance = 12.0,
            EquilibriumError = 12.0,
            MinEigenvalue = 12.0,
            MaxEigenvalue = 12.0,            
            ResidualTolerance = 1e-6,           
            Analyze = true,
            Validate = true,
            UnifLoadsLocal = true,
            // HTML = 1, Latex = 2, CSV = 3, Excel = 4, XML = 5
            OutputFormat = 2,
            RenumNodes = true,
            MaxSegmentCount = 20,
            MinimumIterations = 2,
            MaximumIterations = 13,
            Decimals = 2,
            InputSource = 1
        };

        public Glaucon Glaucon = new()
        {

            Title = "Example D: dynamic properties of an un-restrained frame with a triangular section     ",

            Nodes = new List<Node>
            {
                new(  1,new double[]{ -120  ,  0    ,-210   },10  ),
                new(  1,new double[]{ -120  ,  0    ,-210   },10  ),
                new(  2,new double[]{      0,     0,    -210},  0 ),
                new(  3,new double[]{    120,     0,    -210},  10),
                new(  4,new double[]{     60,   115,    -210},  0 ),
                new(  5,new double[]{      0,   230,    -210},  10),
                new(  6,new double[]{    -60,   115,    -210},  0 ),
                new(  7,new double[]{  120  ,  0    , -90   },0   ),
                new(  8,new double[]{  120  ,  0    , -90   },0   ),
                new(  9,new double[]{    0  ,230    , -90   },0   ),
                new( 10,new double[]{ -120  ,  0    ,   0   },10  ),
                new( 11,new double[]{      0,     0,       0},  0 ),
                new( 12,new double[]{    120,     0,       0},  10),
                new( 13,new double[]{     60,   115,       0},  0 ),
                new( 14,new double[]{      0,   230,       0},  10),
                new( 15,new double[]{    -60,   115,       0},  0 ),
                new( 16,new double[]{ -120  ,  0    ,  90   },0   ),
                new( 17,new double[]{  120  ,  0    ,  90   },0   ),
                new( 18,new double[]{    0  ,230    ,  90   },0   ),
                new( 19,new double[]{ -120  ,  0    , 210   },10  ),
                new( 20,new double[]{      0,     0,     210},  0 ),
                new( 21,new double[]{    120,     0,     210},  10),
                new( 22,new double[]{     60,   115,     210},  0 ),
                new( 23,new double[]{      0,   230,     210},  10),
                new( 24,new double[]{    -60,   115,     210},  0 )
            },

            Members = new List<Member>
            {
                new( 1,  1,  2,new[]{ 1244.07, 622.04, 622.04},new[]{ 2710985.54 ,2710985.54 ,5421971.09},new[]{210000,80769,7.850E-009},0),  
                new( 2,  2,  3,new[]{ 875.77 , 437.88, 437.88},new[]{ 2075574.15 ,4463379.14 ,3314897.06},new[]{210000,80769,7.850E-009},0),  
                new( 3,  3,  4,new[]{ 1244.07, 622.04, 622.04},new[]{ 2710985.54 ,2710985.54 ,5421971.09},new[]{210000,80769,7.850E-009},0),  
                new( 4,  4,  5,new[]{ 1244.07, 622.04, 622.04},new[]{ 2710985.54 ,2710985.54 ,5421971.09},new[]{210000,80769,7.850E-009},0),  
                new( 5,  5,  6,new[]{ 1244.07, 622.04, 622.04},new[]{ 2710985.54 ,2710985.54 ,5421971.09},new[]{210000,80769,7.850E-009},0),  
                new( 6,  6,  7,new[]{ 819.96 , 409.98, 409.98},new[]{ 776703.02  ,776703.02  ,1553406.04},new[]{210000,80769,7.850E-009},0),  
                new( 7,  7,  8,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new( 8,  8,  9,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new( 9,  9, 11,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(10, 11, 13,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(11, 13, 15,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(12, 15, 17,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(13, 17, 19,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(14, 19, 21,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(15, 21, 23,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(16, 23, 25,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(17, 25, 27,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(18, 27, 29,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(19, 29, 31,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(20, 31, 33,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(21, 33, 35,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(22, 35, 37,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(23, 37, 39,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(24,  8, 10,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(25, 10, 12,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(26, 12, 14,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(27, 14, 16,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(28, 16, 18,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(29, 18, 20,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(30, 20, 22,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(31, 22, 24,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(32, 24, 26,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(33, 26, 28,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(34, 28, 30,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(35, 30, 32,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(36, 32, 34,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(37, 34, 36,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(38, 36, 38,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  
                new(39, 38, 40,new[]{ 731.21 , 365.60, 365.60},new[]{ 405316.45  ,405316.45  ,810632.91 },new[]{210000,80769,7.850E-009},0),  

                },
            LoadCases = new List<LoadCase>
            {
                new LoadCase
                {
                    g = new [] {0,0,-9810.0 },
                    NodalLoads = new List<NodalLoad>
                    {
                        new(39, new[]{ -81.478, 0, -98.1, -34335, 0,  28517 }),  
                        new(40, new[]{ -81.478, 0, -98.1,  34335, 0, -28517 })
                    },
                    UniformLoads = new List<UniformLoad>
                    {
                        new(1 , new[]{ -0.075776, 0, 0}), 
                        new(2 , new[]{ -0.075776, 0, 0}), 
                        new(3 , new[]{ -0.075776, 0, 0}), 
                        new(4 , new[]{ -0.080303, 0, 0}), 
                        new(5 , new[]{ -0.083443, 0, 0}), 
                        new(6 , new[]{ -0.08409 , 0, 0}), 
                        new(7 , new[]{ -0.077046, 0, 0}), 
                        new(8 , new[]{ -0.078627, 0, 0}), 
                        new(9 , new[]{ -0.078773, 0, 0}), 
                        new(10, new[]{ -0.078916, 0, 0}), 
                        new(11, new[]{ -0.079055, 0, 0}), 
                        new(12, new[]{ -0.079188, 0, 0}), 
                        new(13, new[]{ -0.079315, 0, 0}), 
                        new(14, new[]{ -0.079434, 0, 0}), 
                        new(15, new[]{ -0.079544, 0, 0}), 
                        new(16, new[]{ -0.079643, 0, 0}), 
                        new(17, new[]{ -0.079732, 0, 0}), 
                        new(18, new[]{ -0.07981 , 0, 0}), 
                        new(19, new[]{ -0.079875, 0, 0}), 
                        new(20, new[]{ -0.079928, 0, 0}), 
                        new(21, new[]{ -0.079967, 0, 0}), 
                        new(22, new[]{ -0.079993, 0, 0}), 
                        new(23, new[]{ -0.080079, 0, 0}), 
                        new(24, new[]{ -0.078627, 0, 0}), 
                        new(25, new[]{ -0.078773, 0, 0}), 
                        new(26, new[]{ -0.078916, 0, 0}), 
                        new(27, new[]{ -0.079055, 0, 0}), 
                        new(28, new[]{ -0.079188, 0, 0}), 
                        new(29, new[]{ -0.079315, 0, 0}), 
                        new(30, new[]{ -0.079434, 0, 0}), 
                        new(31, new[]{ -0.079544, 0, 0}), 
                        new(32, new[]{ -0.079643, 0, 0}), 
                        new(33, new[]{ -0.079732, 0, 0}), 
                        new(34, new[]{ -0.07981 , 0, 0}), 
                        new(35, new[]{ -0.079875, 0, 0}), 
                        new(36, new[]{ -0.079928, 0, 0}), 
                        new(37, new[]{ -0.079967, 0, 0}), 
                        new(38, new[]{ -0.079993, 0, 0}), 
                        new(39, new[]{ -0.080079, 0, 0}), 

                    }
                }

            },
            AnimatedModes = new[] { 1, 7, 9, 11, 12, 13 },
            ExtraNodeInertias = new List<ExtraNodeInertia> 
            { 
                new(39,new[]{ 0.01, 0, 1225, 1225}),  
                new(40,new[]{ 0.01, 0, 1225, 1225}),  
            }
        };
    };
}


